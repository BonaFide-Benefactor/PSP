name: db-schema CI

on:
  push:
    branches: [pims-sookeke]
  pull_request:
    branches: [pims-sookeke]
  schedule:
    - cron: '42 15 * * 5'

jobs:

  build:

    name: db-schema
    runs-on: ubuntu-18.04
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      working-directory: ./database/mssql/scripts/dbscripts

    steps:
    - uses: actions/checkout@v1
    - name: Set up random env variable
      run: |
        passvar=$(date +%s | sha256sum | base64 | head -c 29)A8!
        last_sprint=$(ls -d */ |  tail -n 1 | cut -f1 -d'/')
        echo \
        "ACCEPT_EULA=Y
        MSSQL_SA_PASSWORD=$passvar
        MSSQL_PID=Developer
        TZ=America/Los_Angeles
        TARGET_SPRINT=PSP_PIMS_S08_00
        DB_USER=admin
        DB_PASSWORD=$passvar
        TIMEOUT_LENGTH=120" >> ./.env
        chmod +x ./entrypoint.sh
        chmod +x ./setup.sh
      working-directory: ${{env.working-directory}}
    - name: Build ms sql 2019 stack
      run: |
        docker build -t docker.io/my-organization/my-app:${{ github.sha }} .   
      working-directory: ${{env.working-directory}}
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        output: 'trivy-results.sarif'
    - name: Upload Trivy scan results to GitHub Security tab
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'