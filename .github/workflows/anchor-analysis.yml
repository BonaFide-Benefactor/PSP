name: Security CI

on:
  push:
    branches: [master, test, dev, pims-sookeke]
  pull_request:
    branches: [master, test, dev, pims-sookeke]
  schedule:
    - cron: '42 15 * * 5'

jobs:

  build:

    name: pims-frontend
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      working-directory: ./frontend

    steps:
    - uses: actions/checkout@v1
    - name: Build PIMS Frontend
      run: |
        docker build -t docker.io/pims-frontend:${{ github.sha }} .   
      working-directory: ${{env.working-directory}}
    - name: Scan PIMS Frontend Image with Anchore
      uses: anchore/scan-action@v2
      id: frontend
      with:
        image: 'docker.io/pims-frontend:${{ github.sha }}'
        acs-report-enable: true
        fail-build: true
        severity-cutoff: high
    - name: Upload Anchore scan results to GitHub Security tab
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.frontend.outputs.sarif }}
    - if: always()
      name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name:  frontend Image Scan report
        path: ${{ steps.frontend.outputs.sarif }}
        
    
  build_backend:
    
    if: always()
    needs: build
    name: pims-backend
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      working-directory: ./backend
      
      
    steps:
    - uses: actions/checkout@v1
    - name: Build PIMS Backend
      run: |
        docker build -t docker.io/pims-backend:${{ github.sha }} .   
      working-directory: ${{env.working-directory}}
    - name: Scan PIMS Backend Image with Anchore
      uses: anchore/scan-action@v2
      id: backend
      with:
        image: 'docker.io/pims-backend:${{ github.sha }}'
        acs-report-enable: true
        fail-build: true
        severity-cutoff: high
    - name: Upload Anchore scan results to GitHub Security tab
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.backend.outputs.sarif }}
    - if: always()
      name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend image scan report
        path: ${{ steps.backend.outputs.sarif }}    
        
  build_logging:
  
    if: always()
    needs: [build, build_backend] 
    name: pims-logging
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      working-directory: ./openshift/4.0/templates/Logging
      
      
    steps:
    - uses: actions/checkout@v1
    - name: Build PIMS Logging
      run: |
        docker build -t docker.io/my-organization/my-app:${{ github.sha }} .   
      working-directory: ${{env.working-directory}}
    - name: Scan PIMS Logging Image with Aqua Trivy
      uses: anchore/scan-action@v2
      id: logging
      with:
        image: 'docker.io/my-organization/my-app:${{ github.sha }}'
        acs-report-enable: true
        fail-build: true
    - name: Upload Trivy scan results to GitHub Security tab
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.logging.outputs.sarif }} 