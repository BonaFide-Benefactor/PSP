#!groovy

def MS_TEAMS_SECRET
def MS_TEAMS_WEBHOOK_KEY
def RELEASE_VERSION
def TAG
pipeline {

  agent any
  environment {
    // MS Teams Configuration
    MS_TEAMS_SECRET = 'ms-teams-secrets'
    MS_TEAMS_WEBHOOK_KEY = 'notification-webhook'
    WEBHOOK_URL = sh(script: "oc extract --to=- --keys=${MS_TEAMS_WEBHOOK_KEY} secret/ms-teams-secrets 2>&1 | sed -n 2p", returnStdout: true).trim()
    VANITY_URL = "https://pims-app-3cd915-dev.apps.silver.devops.gov.bc.ca/"
    DEBUG_OUTPUT = sh(script: 'echo "${DEBUG_OUTPUT:-true}"', returnStdout: true).trim()
    OC_JOB_NAME = sh(script: 'echo "${OC_JOB_NAME:-dev}"', returnStdout: true).trim()
    //echo "${WEBHOOK_URL}"
    url = sh(script: 'echo "${WEBHOOK_URL:-}"', returnStdout: true).trim()
  }

  options {
    office365ConnectorWebhooks([
      [
        startNotification: true,
        url: '${WEBHOOK_URL}'
      ]
    ])
  }

  stages {
    stage('Init') {
      steps {
        echo 'Starting!'
      }
    }
    stage('Release Tag') {
      steps {
        script {
          MS_TEAMS_SECRET = 'ms-teams-secrets'
          MS_TEAMS_WEBHOOK_KEY = 'notification-webhook'
          env.NOTIFICATION_WEBHOOK_URL = sh(script: "oc extract --to=- --keys=${MS_TEAMS_WEBHOOK_KEY} secret/ms-teams-secrets 2>&1 | sed -n 2p", returnStdout: true).trim()
          //RELEASE_VERSION = 'v2.0.7.0.3'
          if (env.BRANCH_NAME != 'dev') {
            RELEASE_VERSION = sh(
              returnStdout: true,
              script: 'git describe --abbrev=0 --tags'
            ).trim() + "-" + OC_JOB_NAME

          } else {
            TAG = sh(
              returnStdout: true,
              script: 'git describe --tags `git rev-list --tags --max-count=1`'
            ).trim() + "-" + OC_JOB_NAME
          }
          BUILD_TRIGGER_BY = "${currentBuild.getBuildCauses()[0].shortDescription}"
          echo "BUILD_TRIGGER_BY: ${BUILD_TRIGGER_BY}"
          // some instructions here
          // Print all environment variables
          echo "${RELEASE_VERSION}"
          echo "${TAG}"
          // echo "${env.NOTIFICATION_WEBHOOK_URL}"
          //echo sh(returnStdout: true, script: 'env')
        }
        //error("Build failed because of this and that..")
      }
    }
  }
  post {
    failure {
      script {
        office365ConnectorSend webhookUrl: "${env.NOTIFICATION_WEBHOOK_URL}",
          factDefinitions: [
            [name: "Release version", template: "${RELEASE_VERSION}"]
          ]
      }
    }
    success {
      script {
        office365ConnectorSend webhookUrl: "${env.NOTIFICATION_WEBHOOK_URL}",
          message: "Application has been [deployed](${VANITY_URL})",
          status: 'Success',
          color: '#00FF00', //green
          factDefinitions: [
            [name: "Release version", template: "${RELEASE_VERSION}"],
            [name: "Remarks", template: "${BUILD_TRIGGER_BY}"]
          ]
      }
    }
  }
}